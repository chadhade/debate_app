<% unless @arguments.empty? %>
  <% @arguments.each do |arguments| %>
    $(".debate[data-id="+<%= arguments[:id] %>+"]").append("<%=raw escape_javascript(render arguments[:new_arguments]) %>");
    
	<% debate = Debate.find(arguments[:id]) %>
	$(".post_to_debate[data-id="+<%= arguments[:id] %>+"]").html("<%=raw escape_javascript(render :partial => "/debates/post_to_debate", :locals => {:debate => debate, :currentdebater => @currentdebater}) %>")
    
    abort_timer[<%= debate.id %>] = 1; clearTimeout(timeout_var[<%= debate.id %>]); // Stop the previous timer from running right away
    $.getScript("/debates/<%= debate.id %>.js");
  <% end %>
	setTimeout("javascript_countdown.startTimers()", 4000); 
<% end %>

<% @votes.each do |votes| %>
  <% unless votes[:updated_counts][:for].nil? %>
    $(".votes_for_count[data-argument_id=" + <%= votes[:id] %> + "]").html("<%= votes[:updated_counts][:for] %>");
  <% end %>
  <% unless votes[:updated_counts][:against].nil? %>
    $(".votes_against_count[data-argument_id=" + <%= votes[:id] %> + "]").html("<%= votes[:updated_counts][:against] %>");
  <% end %>
<% end %>

<% @currently_viewing_counts.each do |currently_viewing_count| %>
  $(".currently_viewing_count[data-id=" + <%= currently_viewing_count[:id] %> + "]").html("<%= currently_viewing_count[:currently_viewing_count] %>");
<% end %>