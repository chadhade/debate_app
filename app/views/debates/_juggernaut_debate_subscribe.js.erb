<script type="text/javascript"> 
  	jug.subscribe("debate_" + <%= debate.id %>, function(data){  
		if (data.func == "argument") {
			<% if Rails.env.development? or Rails.env.test? %>
				$(".debate[data-id="+ <%= debate.id %> +"]").append(data.obj.argument);
			<% else %>
				$.each(data.obj.argument, function(idx, val) {   
					$(".debate[data-id="+ <%= debate.id %> +"]").append(val);
				});
			<% end %>
 			$(".debate[data-id="+ <%= debate.id %> +"]").prop({ scrollTop: $(".debate[data-id="+ <%= debate.id %> +"]").prop("scrollHeight") });
			
			<% if !debater.nil? %>
				if ("<%= debater.name %>" == data.obj.current_turn) {
					$('#argument_textarea').val('');
					setTimeout("$('.post_to_debate').show();", 150);
					$("#argument_textarea").focus();
				}
				else {
					$(".post_to_debate").hide();
					$(".join_to_debate").hide();
				}
			<% end %>
			
			if (data.obj.footnotes != false) {
				<% if Rails.env.development? or Rails.env.test? %> 
					$(".footnotescontent").html(data.obj.footnotes);
				<% else %>
					$.each(data.obj.footnotes, function(idx, val) { 
						$(".footnotescontent").html(val);
					});
				<% end %>
			}
			if (data.obj.judge_needed == false) {
				abort_timer[<%= debate.id %>] = 1;  // Stop the previous timer from running
				
				moving_clock_adjusted = data.obj.timers.movingclock;
				
				if(moving_clock_adjusted == 0) {
					moving_clock_adjusted = 10;
				}
				javascript_countdown.init(moving_clock_adjusted, data.obj.timers.staticclock, data.obj.timers.movingposition, data.obj.timers.debateid);
				abort_timer[<%= debate.id %>] = 0;
			}
		}
	
		if (data.func == "update_status") {
			$(".status").html("<h2 status_code=\"" + data.obj.status_code + "\">" + data.obj.status_value + "</h2>");
			if (data.obj2 != "") {  	
				$('#text-no-judge').html(data.obj2);				
			}
			if (data.obj.status_code > 2) {
				$(".waiting-icon").remove();
				$("#pick-judge-options").remove();
			}
		}
		
		if (data.func == "update_individual_exists") {
			if (data.obj.who_code == "debater1") {
				$("#debater1").html(data.obj.who_value);
			}
			if (data.obj.who_code == "debater2") {
				$("#debater2").html(data.obj.who_value);
			}
			if (data.obj.who_code == "judge") {
				$("#judge").html(data.obj.who_value);
			}
		}
				
		if (data.func == "update_individual_cv") {
			if (data.obj.who_code == "debater1") {
				$("#debater1").attr('currently_viewing', data.obj.who_value);
				if (data.obj.joinable == true && data.obj.who_value == "true") {
					$(".join_to_debate").show();
					$('#respond_textarea').focus();
				}
				if (data.obj.who_value == "false") {
					$(".join_to_debate").hide();
				}
			}
			if (data.obj.who_code == "debater2") {
				$("#debater2").attr('currently_viewing', data.obj.who_value);
			}
			if (data.obj.who_code == "judge") {
				$("#judge").attr('currently_viewing', data.obj.who_value);
			}
			$(".debate[data-id="+ <%= debate.id %> +"]").append("<div class='debate-message'>" + data.obj.who_message + "</div>");
			
		}
		
		if(data.func == "update_viewers") {
			$(".viewing_count").html(data.obj.viewers);
		}
		
		if (data.func == "chat") {
			<% if Rails.env.development? or Rails.env.test? %>
				$(".debate[data-id="+ <%= debate.id %> +"]").append(data.obj.chat);
			<% else %>
				$.each(data.obj.chat, function(idx, val) {   
					$(".debate[data-id="+ <%= debate.id %> +"]").append(val);
				});
			<% end %>
			$(".debate[data-id="+ <%= debate.id %> +"]").prop({ scrollTop: $(".debate[data-id="+ <%= debate.id %> +"]").prop("scrollHeight") });
		}
		
		if (data.func == "judge_timer") {
			<% if Rails.env.development? or Rails.env.test? %>      	
				$('#statuspanel').append(data.obj.judgetime_div);			
			<% else %>
				$('#statuspanel').append(data.obj.judgetime_div[0]);
			<% end %>			
			javascript_countdown.init(data.obj.judgetime, 0, 3, <%= debate.id %> );
			abort_timer[<%= debate.id %>] = 0;	
			$(".post_to_debate").hide();
		}
		
		if (data.func == "judge_timer_remove") {
			$('#judge-timer').remove();
		}		
		
		if (data.func == "judge_results") {
			<% if Rails.env.development? or Rails.env.test? %>      	
				$('#statuspanel').append(data.obj.judging_results);
				
				<% if !debater.nil? %>
					if((<%= debater.id %> == data.obj.winner_id) || (<%= debater.id %> == data.obj.loser_id)) {
						$('#statuspanel').append(data.obj.ratings_form);
					}
					if(<%= debater.id %> == data.obj.judgeid) {
						$('#results-vote-info').html("");
					}
				<% end %>
							
			<% else %>
				$('#statuspanel').append(data.obj.judging_results[0]);			
				<% if !debater.nil? %>
					if((<%= debater.id %> == data.obj.winner_id) || (<%= debater.id %> == data.obj.loser_id)) {
						$('#statuspanel').append(data.obj.ratings_form[0]);
					}
				<% end %>		
			<% end %>
			
			$("#judge-timer").html("Winner");
			
			if(data.obj.judgeid != <%= @currentid %>) {
				for ( var i in data.obj.judge_votes ) {
					$(".votes_total_judge[data-argument_id="+ i +"]").html(data.obj.judge_votes[i]);
				}
			}
			if(data.obj.rating_change == true) {
				if(<%= debater.id %> == <%= debate.creator_id %>) {
					rating_changed = true;
					$("#oldscore").html(data.obj.d1_old);
					$("#newscore").html(data.obj.d1);
				}
				if(<%= debater.id %> == data.obj.joiner_id) {
					rating_changed = true;
					$("#oldscore").html(data.obj.d2_old);
					$("#newscore").html(data.obj.d2);	
				}	
			}
		}
		
		if (data.func == "debater_ratings") {
			<% if Rails.env.development? or Rails.env.test? %>      	
				$('#debater-ratings').html(data.obj.ratings);			
			<% else %>
				$('#debater-ratings').html(data.obj.ratings[0]);
			<% end %>
			//alert(typeof rating_changed);
			if((<%= debater.id %> == data.obj.rater_id) && (typeof rating_changed != 'undefined')) {
				$(".score-updates").show();
			}
		}
		
		if (data.func == "start_debate") {
			//abort_timer[<%= debate.id %>] = 1;  // Stop the previous timer from running
			
			soundGavel = document.getElementById('soundHandle');
			soundGavel.play(); // Play the gavel sound
			
			javascript_countdown.init(data.obj.timers.movingclock, data.obj.timers.staticclock, data.obj.timers.movingposition, data.obj.timers.debateid);
			if(<%= debate.creator_id != debater.id %> && <%= debater.id %> != joiner[<%= debate.id %>]) {
				voteable[<%= debate.id %>] = true; // Everyone can vote except creator and joiner
			}
			abort_timer[<%= debate.id %>] = 0;
			
			<% if !debater.nil? %>
				if ("<%= debater.name %>" == data.obj.current_turn) {
					$('#argument_textarea').val('');
					$(".post_to_debate").show();
					$("#argument_textarea").focus();
				}
			<% end %>
		}

		if (data.func == "joiner")	{
			//$(".timertitle-2").html("<a href='" + data.obj.joinerpath + "'>" + data.obj.joiner + "</a>:  ");
			if (<%= debater.id %> == data.obj.joinerid) {
				$(".timertitle-2").html("You: ")
			}
			else {
				$(".timertitle-2").html(data.obj.joinerpath);
			}
			moving_clock[data.obj.timers.debateid] = data.obj.timers.staticclock;
			$("#timer2-<%= debate.id %>").html(format_output(data.obj.timers.staticclock));
			voteable[<%= debate.id %>] = false;
			joiner[<%= debate.id %>] = data.obj.joinerid;
			if (<%= debater.id %> == data.obj.joinerid) { 
				$("#judge-check-box").show();
				$("#nojudge-label").show();
			}
			<% if Rails.env.development? or Rails.env.test? %>      	
				$(".waiting-icon").html(data.obj.waiting_icon);
			<% else %>
				$.each(data.obj.waiting_icon, function(idx, val) {    
					$(".waiting-icon").html(val);
				});
			<% end %>
		}

		if (data.func == "end_single") {
			
			<% if !debater.nil? %>
				if ("<%= debater.name %>" == data.obj.current_turn) {   	
					$('#argument_textarea').val('');
					$(".post_to_debate").show();
					$("#argument_textarea").focus();	
				}
				else {
					$(".post_to_debate").hide();
				}
			<% end %>
			
			if (data.obj.position != moving_position[<%= debate.id %>]) {
				moving_clock_adjusted = static_clock[<%= debate.id %>];
				if(moving_clock_adjusted <= 2) {
					moving_clock_adjusted = 2;
				}
				javascript_countdown.init(moving_clock_adjusted, 0, data.obj.position, <%= debate.id %>);
				abort_timer[<%= debate.id %>] = 0;	
			}
		}
		
		if (data.func == "end_debate") {
				$(".post_to_debate").hide();
				if((<%= participant %>) || (<%= debater.id %> == data.obj.joiner_id)) {	  	
					$(".chat_to_debate").show();
					$("#chat_textarea").focus();
				}
		}
	});
	
	<% if debater.id != debate.judge_id %>
		jug.subscribe("debate_" + <%= debate.id %> + "_votes", function(votes){
		
			if (votes.obj.type == "true") {
				incrementVotesFor(votes.obj.id);
			}
			else {
				incrementVotesAgainst(votes.obj.id);
			}
		});
	<% end %>
	
	<% if debater.id == debate.judge_id %>
		jug.subscribe("debate_" + <%= debate.id %> + "_judge", function(data){
			if (data.judging_form =="clear_form") {
				$('.judging_form').remove();
			}
			if (data.func == "judging_form") {
				<% if Rails.env.development? or Rails.env.test? %>      	
					$('#statuspanel').append(data.obj.judging_form);
				<% else %>
					$('#statuspanel').append(data.obj.judging_form[0]);
				<% end %>
				$('.judging_form').focus();
			}
			if (data.func == "judge_votes") {
				if (data.obj.votes.type == "true") {
					incrementVotesFor(data.obj.votes.id);
				}
				else {
					incrementVotesAgainst(data.obj.votes.id);
				}
			}
			
		});
	<% end %>
	
	<% if @debate.started_at and @debate.joined and debater_signed_in? %>
		voteable[<%= debate.id %>] = true;
	<% end %>
	
	function format_output(timetoformat) {
		var hours, minutes, seconds;
		seconds = timetoformat % 60;
		minutes = Math.floor(timetoformat / 60) % 60;
		hours = Math.floor(timetoformat / 3600);
 
		seconds = add_leading_zero( seconds );
		minutes = add_leading_zero( minutes );
		hours = add_leading_zero( hours );
 
		return hours + ':' + minutes + ':' + seconds;
	}
	
	function add_leading_zero(n) {
		if(n.toString().length < 2) {
			return '0' + n;
		} else {
			return n;
		}
	}
</script>